// Generated by BUCKLESCRIPT VERSION 3.1.5, PLEASE EDIT WITH CARE
'use strict';

var Massive = require("massive");
var Js_primitive = require("bs-platform/lib/js/js_primitive.js");

function create(user, password, ssl, poolSize, host, port, database) {
  var tmp = {
    host: host,
    port: port,
    database: database
  };
  if (user) {
    tmp.user = user[0];
  }
  if (password) {
    tmp.password = password[0];
  }
  if (ssl) {
    tmp.ssl = ssl[0];
  }
  if (poolSize) {
    tmp.poolSize = poolSize[0];
  }
  return Massive(tmp);
}

var table = function (db,name){db[name]};

function table$1(db, name) {
  return Js_primitive.null_undefined_to_opt(table(db, name));
}

var empty = { };

function find(options, table, criteria) {
  var options$1 = options ? options[0] : empty;
  return table.find(criteria, options$1);
}

function findOne(options, table, criteria) {
  var options$1 = options ? options[0] : empty;
  return table.findOne(criteria, options$1);
}

function findOneId(options, table, id) {
  var options$1 = options ? options[0] : empty;
  return table.findOne(id, options$1);
}

function reload(prim) {
  return prim.reload();
}

function listTables(prim) {
  return prim.listTables();
}

function listViews(prim) {
  return prim.listViews();
}

function listFunctions(prim) {
  return prim.listFunctions();
}

function Queries_003(prim, prim$1) {
  return prim.count(prim$1);
}

function Queries_004(prim, prim$1, prim$2) {
  return prim.where(prim$1, prim$2);
}

function Queries_005(prim, prim$1, prim$2) {
  return prim.where(prim$1, prim$2);
}

var Queries = [
  find,
  findOne,
  findOneId,
  Queries_003,
  Queries_004,
  Queries_005
];

exports.create = create;
exports.reload = reload;
exports.listTables = listTables;
exports.listViews = listViews;
exports.listFunctions = listFunctions;
exports.table = table$1;
exports.Queries = Queries;
/* massive Not a pure module */
